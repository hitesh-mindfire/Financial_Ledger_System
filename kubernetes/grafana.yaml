apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:apiVersion: apps/v1
kind: Deployment
metadata:
  name: card-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: card-service
  template:
    metadata:
      labels:
        app: card-service
      annotations:
        prometheus.io/scrape: "true"      
        prometheus.io/port: "8080"        
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: card-service
        image: card-service:latest
        imagePullPolicy: Never
        ports:
        - name: grpc
          containerPort: 8080
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: card-service
  annotations:
    prometheus.io/scrape: "true"        
    prometheus.io/port: "8080"          
    prometheus.io/path: "/metrics"
spec:
  ports:
  - name: grpc
    port: 8080
    targetPort: grpc
  selector:
    app: card-service
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:9.3.1
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
