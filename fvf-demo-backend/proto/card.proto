syntax = "proto3";

package proto;

import "google/protobuf/timestamp.proto";
option go_package = "/generated/card_proto";

message Decimal1 {
    string value = 1;
}

message Merchant {
    string id = 1;
    string name = 2;
    string category = 3;
}

message Card {
    string id = 1;
    string user_id = 2;
    string status = 3;
    string credit_limit = 4;
    string card_number = 5;
    string available_balance = 6;
    string cvv = 7;
    google.protobuf.Timestamp issued_at = 8;
    string expiry_date = 9;
}

message CardResponse {
    string id = 1;
    string user_id = 2;
    string status = 3;
    string credit_limit = 4;
    string card_number = 5;
    string available_balance = 6;
    string cvv = 7;
    google.protobuf.Timestamp issued_at = 8;
    string expiry_date = 9;
}

message IssueCardRequest {
    string user_id = 1;
    string credit_limit = 2;
}

message AuthRequest {
    string card_id = 1;
    string amount = 2;
}

message AuthResponse {
    bool authorized = 1;
    string transaction_id = 2;
}

message UpdateLimitRequest {
    string card_id = 1;
    string new_limit = 2;
}

message GetBalanceRequest {
    string card_id = 1;
}

message GetBalanceResponse {
    Balance balance = 1;
    Credit_limit credit_limit = 2;
}

message Balance {
    string card_id = 1;
    string current_balance = 2;
}

message Credit_limit {
    string card_id = 1;
    string credit_limit = 2;
}

message CardEvents {
    message Issued {
        string card_id = 1;
        string user_id = 2;
        string credit_limit = 3;
        google.protobuf.Timestamp issued_at = 4;
    }

    message TransactionAuthorized {
        string card_id = 1;
        string transaction_id = 2;
        string amount = 3;
        Merchant merchant = 4;
        google.protobuf.Timestamp authorized_at = 5;
    }
}

service CardService {
    rpc IssueCard(IssueCardRequest) returns (Card);
    rpc AuthorizeTransaction(AuthRequest) returns (AuthResponse);
    rpc UpdateLimit(UpdateLimitRequest) returns (Card);
    rpc GetBalance(GetBalanceRequest) returns (Balance);
}
